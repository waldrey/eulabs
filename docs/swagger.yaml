basePath: /api/v1
definitions:
  dto.PutProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  requests.TypeErrorResponse:
    properties:
      data:
        properties:
          error:
            type: string
        type: object
    type: object
  requests.TypeSuccessResponse:
    properties:
      data: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: API de Produtos
  title: Eulabs Products API
  version: "1.0"
paths:
  /api/v1/products:
    post:
      consumes:
      - application/json
      description: Create product
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/requests.TypeSuccessResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: Create Product
      tags:
      - Products
  /products:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.TypeSuccessResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: List products
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the product from the system
      parameters:
      - description: product ID
        format: int
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: Delete product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Get product by id
      parameters:
      - description: product ID
        format: int
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.TypeSuccessResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: Get Product
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Update product
      parameters:
      - description: product ID
        format: int
        in: path
        name: id
        required: true
        type: string
      - description: product request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.TypeSuccessResponse'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: Update product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update product
      parameters:
      - description: product ID
        format: int
        in: path
        name: id
        required: true
        type: string
      - description: product request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.PutProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/requests.TypeSuccessResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/requests.TypeErrorResponse'
      summary: Update product
      tags:
      - Products
swagger: "2.0"
